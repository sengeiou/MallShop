package com.epro.comp.im.ui.fragment

import android.app.Activity
import android.content.Context
import android.content.Intent
import com.epro.comp.im.listener.ChatMessageChangeEvent
import com.epro.comp.im.mvp.contract.ChatRecordListContract
import com.epro.comp.im.mvp.model.bean.ChatRecord
import com.epro.comp.im.mvp.model.bean.MsgBody
import com.epro.comp.im.mvp.model.bean.User
import com.epro.comp.im.mvp.presenter.ChatRecordListPresenter
import com.epro.comp.im.ui.activity.ChatActivity
import com.epro.comp.im.ui.adapter.ChatRecordListAdapter
import com.epro.comp.im.utils.IMBusManager
import com.mike.baselib.fragment.BaseTitleBarListFragment
import com.mike.baselib.utils.AppBusManager
import org.greenrobot.eventbus.Subscribe
import org.greenrobot.eventbus.ThreadMode

class ChatRecordListFragment : BaseTitleBarListFragment<ChatRecord, ChatRecordListContract.View
        , ChatRecordListPresenter, ChatRecordListAdapter>(), ChatRecordListContract.View {

    companion object {
        const val TAG = "getChatRecordList"
        const val FOR_CHAT_RESULT = 11
        fun launch(context: Context) {
            launchWithStr(context, "")
        }

        fun launchWithStr(context: Context, str: String) {
            context.startActivity(Intent(context, ChatRecordListFragment::class.java).putExtra(TAG, str))
        }
    }


    override fun getListAdapter(list: ArrayList<ChatRecord>): ChatRecordListAdapter {
        return ChatRecordListAdapter(activity!!, list)
    }

    override fun getListData() {
        mPresenter.getChatRecordList(csId)
    }

    override fun initData() {

    }

    override fun getPresenter(): ChatRecordListPresenter {
        return ChatRecordListPresenter()
    }

    var isClickToChat = false
    override fun initView() {
        IMBusManager.setUser(User(AppBusManager.getUsername(),
                AppBusManager.getUsername(), AppBusManager.getUsername()))
        super.initView()
        getTitleView().text = "消息列表"
        listDataAdapter?.onItemClickListener = object : ChatRecordListAdapter.OnItemClickListener {
            override fun onClick(item: ChatRecord, position: Int) {
                isClickToChat = true
                item.unReadCount = 0
                listDataAdapter?.notifyItemChanged(position)
                ChatActivity.launchWithShopId_CsId(this@ChatRecordListFragment, item.shopId, item.csId, FOR_CHAT_RESULT)
            }
        }
    }
    var csId=""
    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
        super.onActivityResult(requestCode, resultCode, data)
        when (requestCode) {
            FOR_CHAT_RESULT -> {
                if (Activity.RESULT_OK == resultCode) {
                    csId=data!!.getStringExtra("csId")
                    getListData()
                }
                isClickToChat = false
            }
        }
    }

    @Subscribe(threadMode = ThreadMode.MAIN)
    fun onChatMessageChangeEvent(event: ChatMessageChangeEvent<MsgBody>) {
        val message = event.message!!
        if (!isClickToChat) {
            csId=""
            getListData()
        }
    }
    override fun initListener() {
    }

}


