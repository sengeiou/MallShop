package com.epro.comp.im.mvp.presenter

import com.mike.baselib.base.ListPresenter
import com.mike.baselib.net.exception.ErrorStatus
import com.mike.baselib.net.exception.ExceptionHandle
import com.epro.comp.im.mvp.contract.ChatRecordListContract
import com.epro.comp.im.mvp.model.ChatRecordListModel
import com.epro.comp.im.mvp.model.bean.ChatRecord
import com.epro.comp.im.utils.IMConst

class ChatRecordListPresenter : ListPresenter<ChatRecord, ChatRecordListContract.View>(), ChatRecordListContract.Presenter {

    private val model by lazy { ChatRecordListModel() }

    fun getChatRecordList(csId:String,type: String = IMConst.GET_CHAT_RECORD_LIST) {
        checkViewAttached()
        mRootView?.showLoading(type)
        val disposable = model.getChatRecordList(csId)
                .subscribe({ bean ->
                    mRootView?.getListDataSuccess(bean.result.records, type)
                    mRootView?.dismissLoading(ErrorStatus.SUCCESS_MSG, ErrorStatus.SUCCESS, type)
                }, { throwable ->
                    //处理异常
                    ExceptionHandle.handleException(throwable)
                    mRootView?.showError(ExceptionHandle.errorMsg, ExceptionHandle.errorCode, type)
                    mRootView?.dismissLoading(ExceptionHandle.errorMsg, ExceptionHandle.errorCode, type)
                })
        addSubscription(disposable)
    }

}
