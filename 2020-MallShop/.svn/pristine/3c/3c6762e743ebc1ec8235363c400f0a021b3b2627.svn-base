package com.epro.mall.ui.activity;

import android.content.Context
import android.content.Intent
import android.text.TextUtils
import android.view.TextureView
import android.view.View
import android.widget.ImageView
import com.mike.baselib.activity.BaseTitleBarCustomActivity
import com.epro.mall.R
import com.epro.mall.mvp.contract.ShopInfoContract
import com.epro.mall.mvp.model.bean.Shop
import com.epro.mall.mvp.model.bean.ShopInfo
import com.epro.mall.mvp.model.bean.ShopLocation
import com.epro.mall.mvp.presenter.ShopInfoPresenter
import com.epro.mall.utils.MallConst
import com.mike.baselib.utils.*
import com.youth.banner.loader.ImageLoader
import kotlinx.android.synthetic.main.activity_shop_info.*

/**
 * 店铺简介页面
 */
class ShopInfoActivity : BaseTitleBarCustomActivity<ShopInfoContract.View, ShopInfoPresenter>(), ShopInfoContract.View, View.OnClickListener {
    var shopInfo: ShopInfo? = null
    override fun onGetShopInfoSuccess(shopInfo: ShopInfo) {
        this.shopInfo = shopInfo
        tvShopName.text = shopInfo.shopName
        ivShopLogo.ext_loadCircleImageWithDomain(shopInfo.shopLogo)
        tvPhone.text = shopInfo.mobile
        tvDetail.text = shopInfo.shopDesc
        tvAddress.text = shopInfo.province + shopInfo.city + shopInfo.area + shopInfo.address
        val imageList = arrayListOf(shopInfo.shopImageOne, shopInfo.shopImageTwo, shopInfo.shopImageThree, shopInfo.shopImageFour, shopInfo.shopImageFive)
        val images = ArrayList<String>()
        for (img in imageList) {
            if (!TextUtils.isEmpty(img)) {
                images.add(img)
            }
        }
        banner.setImages(images).setImageLoader(GlideImageLoader()).setDelayTime(3000).start()
    }

    inner class GlideImageLoader : ImageLoader() {
        override fun displayImage(context: Context?, path: Any?, imageView: ImageView?) {
//            val padding = DisplayManager.dip2px(12.toFloat())
//            imageView?.setPadding(padding!!, 0, padding, 0)
            imageView?.ext_loadConnersImageWithDomain(path as String, 10F, R.mipmap.bg_long_empty)
        }

        override fun createImageView(context: Context?): ImageView {
            return super.createImageView(context)
        }
    }


    override fun onClick(p0: View?) {
        when (p0) {
            ivAddress -> {
                if (shopInfo == null) {
                    toast("先获取店铺信息")
                    return
                }
                val shopLocationList = ArrayList<ShopLocation>()
                val shopLocation = ShopLocation(shopInfo!!.address, shopInfo!!.latitude, shopInfo!!.longitude, shopInfo!!.shopId, shopInfo!!.shopName)
                shopLocationList.add(shopLocation)
                FindShopActivity.launchWithShopLocationList(this@ShopInfoActivity, shopLocationList)
            }
            ivPhone -> {
                if (shopInfo == null) {
                    toast("先获取店铺信息")
                    return
                }
                AppUtils.callPhone(this, tvPhone.text.toString())
            }
        }
    }

    companion object {
        const val TAG = "ShopInfo"
        const val SHOP_ID = "shop_id"
        fun launch(context: Context) {
            launchWithShopId(context, "")
        }

        fun launchWithShopId(context: Context, shopId: String) {
            context.startActivity(Intent(context, ShopInfoActivity::class.java).putExtra(SHOP_ID, shopId))
        }
    }

    override fun getPresenter(): ShopInfoPresenter {
        return ShopInfoPresenter()
    }

    override fun layoutContentId(): Int {
        return R.layout.activity_shop_info
    }

    override fun initData() {
        reload()
    }

    override fun reload() {
        val shopId = intent.getStringExtra(SHOP_ID)
        mPresenter.getShopInfo(shopId!!, MallConst.GET_SHOP_INFO)
    }

    override fun initView() {
        super.initView()
        getTitleView().text = getString(R.string.store_introduction)
        setRefreshEnable(true)
    }

    override fun initListener() {
        ivPhone.setOnClickListener(this)
        ivAddress.setOnClickListener(this)
    }

}


