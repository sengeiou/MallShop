package com.epro.mall

import android.app.Activity
import android.content.Intent
import android.os.Bundle
import android.view.View
import android.widget.Toast
import com.billy.cc.core.component.CC
import com.epro.mall.api.ApiService
import com.epro.mall.mvp.model.bean.ItemMine
import com.epro.mall.ui.MainActivity
import com.epro.mall.ui.UpgradeActivity
import com.epro.mall.ui.activity.*
import com.epro.mall.ui.adapter.MineAdapter
import com.epro.mall.utils.ActivityUtil
import com.flyco.tablayout.listener.OnTabSelectListener
import com.mike.baselib.base.BaseApplication
import com.mike.baselib.net.RetrofitManager
import com.mike.baselib.utils.AppBusManager
import com.mike.baselib.utils.AppConfig
import com.mike.baselib.utils.AppContext
import com.mob.MobSDK
import com.tencent.bugly.beta.Beta
import com.tencent.bugly.beta.upgrade.UpgradeListener
import com.tencent.bugly.beta.upgrade.UpgradeStateListener
import kotlinx.android.synthetic.main.activity_goods_detail.*
import kotlinx.android.synthetic.main.activity_main.*
import kotlinx.android.synthetic.main.activity_nearly_shoplist.*
import kotlinx.android.synthetic.main.activity_order_info.*
import kotlinx.android.synthetic.main.activity_shop_detail.*
import kotlinx.android.synthetic.main.fragment_home.ivSearch
import kotlinx.android.synthetic.main.fragment_mine.*
import kotlin.properties.Delegates


class MallApplication : BaseApplication() {

    companion object {
        var apiService: ApiService by Delegates.notNull()
            private set

//        fun getMineItemData(): ArrayList<ItemMine> {
//            val list = ArrayList<ItemMine>()
//            val mTexts = arrayOf(R.string.account_relative, R.string.modify_password, R.string.language_change, R.string.receive_address, R.string.about_us, R.string.my_message, R.string.set_dv)
//            val mIcons = arrayOf(R.mipmap.my_icon1, R.mipmap.my_icon2, R.mipmap.icon_language, R.mipmap.my_icon3, R.mipmap.my_icon4, R.mipmap.my_icon4, R.mipmap.my_icon4)
//            val mBackgrounds = arrayOf(R.drawable.shape_bg_white_half_radius17_top, R.color.white, R.drawable.shape_bg_white_half_radius5,
//                    R.drawable.shape_bg_white_half_radius6_top, R.drawable.shape_bg_white_half_radius5, R.color.white, R.color.white)
//            for (index in mTexts.indices) {
//                list.add(ItemMine(mIcons[index], AppContext.getInstance().getString(mTexts[index]), mBackgrounds[index]))
//            }
//            val item = list.get(list.size - 1)
//            item.content = item.content + "(" + AppBusManager.getDevName() + ")"
//            return list
//        }

        fun getMineItemData(): ArrayList<ItemMine> {
            val list = ArrayList<ItemMine>()
            val mTexts = arrayOf(R.string.account_relative, R.string.modify_password, R.string.language_change, R.string.receive_address, R.string.about_us, R.string.set_dv)
            val mIcons = arrayOf(R.mipmap.my_icon1, R.mipmap.my_icon2, R.mipmap.icon_language, R.mipmap.my_icon3, R.mipmap.my_icon4, R.mipmap.my_icon4)
            val mBackgrounds = arrayOf(R.drawable.shape_bg_white_half_radius17_top, R.color.white, R.drawable.shape_bg_white_half_radius5,
                    R.drawable.shape_bg_white_half_radius6_top, R.color.white, R.color.white)
            for (index in mTexts.indices) {
                list.add(ItemMine(mIcons[index], AppContext.getInstance().getString(mTexts[index]), mBackgrounds[index]))
            }
            val item = list.get(list.size - 1)
            item.content = item.content + "(" + AppBusManager.getDevName() + ")"
            return list
        }
    }

    override fun onCreate() {
        // Beta.upgradeDialogLayoutId = R.layout.upgrade_dialog
        // Beta.tipsDialogLayoutId = R.layout.upgrade_tips_dialog
        /*在application中初始化时设置监听，监听策略的收取*/

        Beta.upgradeListener = UpgradeListener { ret, strategy, isManual, isSilence ->
            if (strategy != null) {
                val i = Intent()
                i.setClass(applicationContext, UpgradeActivity::class.java!!)
                i.flags = Intent.FLAG_ACTIVITY_NEW_TASK
                startActivity(i)
            } else {
                Toast.makeText(this, getString(R.string.not_update), Toast.LENGTH_LONG).show()
            }
        }

        /* 设置更新状态回调接口 */
        Beta.upgradeStateListener = object : UpgradeStateListener {
            override fun onDownloadCompleted(isManual: Boolean) {
            }

            override fun onUpgradeSuccess(isManual: Boolean) {
                Toast.makeText(applicationContext, "UPGRADE_SUCCESS", Toast.LENGTH_SHORT).show()
            }

            override fun onUpgradeFailed(isManual: Boolean) {
                Toast.makeText(applicationContext, "UPGRADE_FAILED", Toast.LENGTH_SHORT).show()
            }

            override fun onUpgrading(isManual: Boolean) {
                Toast.makeText(applicationContext, "UPGRADE_CHECKING", Toast.LENGTH_SHORT).show()
            }

            override fun onUpgradeNoVersion(isManual: Boolean) {
                Toast.makeText(applicationContext, "UPGRADE_NO_VERSION", Toast.LENGTH_SHORT).show()
            }
        }

        super.onCreate()
        apiService = RetrofitManager.getRetrofit().create(ApiService::class.java)
        MobSDK.init(this)

        registerActivityLifecycleCallbacks(mActivityLifecycleCallbacks)

        CC.enableVerboseLog(true)
        CC.enableDebug(true)
        CC.enableRemoteCC(true)
    }

    private val mActivityLifecycleCallbacks = object : ActivityLifecycleCallbacks {
        override fun onActivityCreated(activity: Activity, savedInstanceState: Bundle?) {

        }

        override fun onActivityStarted(activity: Activity) {

        }

        override fun onActivityResumed(activity: Activity) {

            if (!AppConfig.isPublish) {

                //TODO 首页搜索
                if (activity is MainActivity) {
                    AppContext.getInstance().mainHandler.postDelayed(Runnable {
                        activity.ivSearch?.visibility=View.VISIBLE
                    },100)

                }

                //TODO 店铺页面搜索
                if (activity is ShopDetailActivity) {
                    AppContext.getInstance().mainHandler.postDelayed(Runnable {
                        activity.rlSearch?.visibility = View.VISIBLE
                    },100)
                }

                //TODO 确认订单地址配送方式
                if (activity is OrderInfoActivity) {
                    AppContext.getInstance().mainHandler.postDelayed(Runnable {
                        activity.rvShopOrders?.layoutManager?.findViewByPosition(0)?.findViewById<View>(R.id.rgTakeMode)?.visibility = View.VISIBLE
                    }, 100)
                }

                //TODO 附件店铺城市定位
                if (activity is NearlyShopListActivity) {
                    AppContext.getInstance().mainHandler.postDelayed(Runnable {
                        activity.llLeft?.isEnabled = true
                        activity.ivTriangle?.visibility = View.VISIBLE
                    },100)
                }

                //TODO 添加地址城市定位
                if (activity is GeolocationSelectActivity) {
                    AppContext.getInstance().mainHandler.postDelayed(Runnable {
                        activity.llLeft?.isEnabled = true
                        activity.ivTriangle?.visibility = View.VISIBLE
                    },100)

                }

                //TODO 商品详情客服按钮
//                if (activity is GoodsDetailActivity) {
//                    AppContext.getInstance().mainHandler.postDelayed(Runnable {
//                        activity.tvService.visibility = View.VISIBLE
//                    },100)
//                }

                //TODO 我的页面
                if (activity is MainActivity) {
                    AppContext.getInstance().mainHandler.postDelayed(Runnable {
                        activity.tab_layout?.setOnTabSelectListener(object : OnTabSelectListener {
                            override fun onTabReselect(position: Int) {

                            }
                            override fun onTabSelect(position: Int) {
                                activity.mIndex = position
                                activity.switchFragment()
                                if (position == 3) {
                                    AppContext.getInstance().mainHandler.postDelayed(Runnable {
                                        (activity.rvMineItems.adapter as MineAdapter).setData(getMineItemData())
                                    }, 100)
                                }
                            }
                        })
                    },100)
                }
                //TODO 即时通讯服务
//                if (AppBusManager.isLogin()&&activity is MainActivity) {
//                    ActivityUtil.startIMService(activity)
//                }

            }
        }

        override fun onActivityPaused(activity: Activity) {

        }

        override fun onActivityStopped(activity: Activity) {

        }

        override fun onActivitySaveInstanceState(activity: Activity, outState: Bundle) {

        }

        override fun onActivityDestroyed(activity: Activity) {

        }
    }


}
